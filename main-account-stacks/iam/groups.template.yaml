Resources:
  AdminGroup:
    Properties:
      GroupName: CAREFUL_DANGEROUS_AdminMasterAccountGroup
      Path: /admin/
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'
          PolicyName: AdminPolicy
    Type: AWS::IAM::Group

  UserManagement:
    Properties:
      GroupName: UserManagement
      Path: /admin/
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'iam:CreateLoginProfile'
                  - 'iam:CreateUser'
                Effect: Allow
                Resource: '*'
          PolicyName: UserCreation
    Type: AWS::IAM::Group

  UserCredentialsManagement:
    Properties:
      GroupName: UserCredentialsManagement
      Path: /admin/
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: iam:GetAccountPasswordPolicy
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:GetLoginProfile
                  - iam:UpdateLoginProfile
                Resource: arn:aws:iam::*:user/${aws:username}
              - Sid: AllowListActions
                Effect: Allow
                Action:
                  - iam:ListUsers
                  - iam:ListVirtualMFADevices
                Resource: "*"
              - Sid: AllowIndividualUserToListOnlyTheirOwnMFA
                Effect: Allow
                Action:
                  - iam:ListMFADevices
                Resource:
                  - arn:aws:iam::*:mfa/*
                  - arn:aws:iam::*:user/${aws:username}
              - Sid: AllowIndividualUserToManageTheirOwnMFA
                Effect: Allow
                Action:
                  - iam:CreateVirtualMFADevice
                  - iam:DeleteVirtualMFADevice
                  - iam:EnableMFADevice
                  - iam:ResyncMFADevice
                Resource:
                  - arn:aws:iam::*:mfa/${aws:username}
                  - arn:aws:iam::*:user/${aws:username}
              - Sid: AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA
                Effect: Allow
                Action:
                  - iam:DeactivateMFADevice
                Resource:
                  - arn:aws:iam::*:mfa/${aws:username}
                  - arn:aws:iam::*:user/${aws:username}
                Condition:
                  Bool:
                    aws:MultiFactorAuthPresent: 'true'
              - Sid: ManageAccessKeys
                Effect: Allow
                Action:
                  - iam:ListAccessKeys
                  - iam:CreateAccessKey
                  - iam:DeleteAccessKey
                Resource:
                  - arn:aws:iam::*:user/${aws:username}
                Condition:
                  Bool:
                    aws:MultiFactorAuthPresent: 'true'
              - Sid: BlockMostAccessUnlessSignedInWithMFA
                Effect: Deny
                NotAction:
                  - iam:CreateVirtualMFADevice
                  - iam:EnableMFADevice
                  - iam:ListMFADevices
                  - iam:ListUsers
                  - iam:ListVirtualMFADevices
                  - iam:ResyncMFADevice
                  - iam:ChangePassword
                  - sts:AssumeRole
                  - organizations:ListAccounts
                  - iam:ListAccountAliases
                Resource: "*"
                Condition:
                  BoolIfExists:
                    aws:MultiFactorAuthPresent: 'false'
          PolicyName: UserCredentialManagement
    Type: AWS::IAM::Group

  AccountListing:
    Properties:
      GroupName: ListAccounts
      Path: /admin/
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - 'organizations:ListAccounts'
                Effect: Allow
                Resource: '*'
          PolicyName: AccountListing
    Type: AWS::IAM::Group