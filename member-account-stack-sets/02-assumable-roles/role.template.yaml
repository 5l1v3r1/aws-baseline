Parameters:
  MFA:
    Type: String
    Default: false
    AllowedValues: [true, false]
  AllowedRegions:
    Type: String
    Default: 'all'

Conditions:
  HasMFAEnabled: !Equals [true, !Ref MFA]
  HasRegionLimitation: !Not [!Equals ['all', !Ref AllowedRegions]]
Resources:
  AssumableAdminRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            AWS: !Ref MainAccount
          Action: sts:AssumeRole
          Condition:
            Fn::If:
              - HasMFAEnabled
              - {"Bool": {"aws:MultiFactorAuthPresent": true}}
              - !Ref AWS::NoValue
      Policies:
        - PolicyName: AdminAccess
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: AdminAccess
                Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'
                Condition:
                  Fn::If:
                    - HasRegionLimitation
                    - "ForAnyValue:StringEquals":
                          "aws:RequestedRegion": !Split [',', !Ref AllowedRegions]
                    - !Ref AWS::NoValue
      RoleName: admin
    Type: AWS::IAM::Role

  AssumableCloudFormationRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            AWS: !Ref MainAccount
          Action: sts:AssumeRole
          Condition:
            Fn::If:
              - HasMFAEnabled
              - {"Bool": {"aws:MultiFactorAuthPresent": true}}
              - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: CloudFormation
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: AllowCloudFormation
                Effect: Allow
                Action:
                  - cloudformation:*
                Resource:
                  - "*"
                Condition:
                  Fn::If:
                    - HasRegionLimitation
                    - "ForAnyValue:StringEquals":
                          "aws:RequestedRegion": !Split [',', !Ref AllowedRegions]
                    - !Ref AWS::NoValue
              - Sid: PassingRoleToCloudFormation
                Effect: Allow
                Action:
                  - iam:PassRole
                  - iam:GetRole
                Resource:
                  - !GetAtt CloudFormationRole.Arn
                Condition:
                  Fn::If:
                    - HasRegionLimitation
                    - "ForAnyValue:StringEquals":
                          "aws:RequestedRegion": !Split [',', !Ref AllowedRegions]
                    - !Ref AWS::NoValue
      RoleName: user
    Type: AWS::IAM::Role

  CloudFormationRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationRoleAdmin
          PolicyDocument:
            Version: '2008-10-17'
            Statement:
              - Sid: CloudFormationRoleAdmin
                Effect: Allow
                Action:
                  - '*'
                Resource:
                  - '*'
                Condition:
                  Fn::If:
                    - HasRegionLimitation
                    - "ForAnyValue:StringEquals":
                          "aws:RequestedRegion": !Split [',', !Ref AllowedRegions]
                    - !Ref AWS::NoValue
      RoleName: cloudformation
    Type: AWS::IAM::Role
