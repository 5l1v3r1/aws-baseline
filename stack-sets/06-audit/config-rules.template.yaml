{% set GlobalRules = ['IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS', 'IAM_PASSWORD_POLICY', 'ROOT_ACCOUNT_MFA_ENABLED', 'IAM_ROOT_ACCESS_KEY_CHECK', 'MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS'] %}

Resources:
  {% for Rule in GlobalRules %}
  {{Rule | resource}}:
    DependsOn: ConfigurationRecorderGlobal
    Condition: IsGlobalRegion
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: "{{Rule}}"
      Source:
        Owner: AWS
        SourceIdentifier: "{{Rule}}"
  {% endfor %}

  GuardDutyEnabledAndCentralized:
    DependsOn: ConfigurationRecorderLocal
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: "GUARDDUTY_ENABLED_CENTRALIZED"
      InputParameters:
        CentralMonitoringAccount: !Ref MainAccount
      Source:
        Owner: AWS
        SourceIdentifier: "GUARDDUTY_ENABLED_CENTRALIZED"

  MultiRegionCloudTrailEnabled:
    Condition: IsGlobalRegion
    DependsOn: ConfigurationRecorderLocal
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: "MULTI_REGION_CLOUD_TRAIL_ENABLED"
      InputParameters:
        s3BucketName: !Sub ${TrailBucketPrefix}-${MainAccount}
      Source:
        Owner: AWS
        SourceIdentifier: "MULTI_REGION_CLOUD_TRAIL_ENABLED"


  IAMUserGroupMembership:
    DependsOn: ConfigurationRecorderGlobal
    Condition: IsGlobalMainAccountRegion
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: IAM_USER_GROUP_MEMBERSHIP_CHECK
      InputParameters:
        groupNames: UserCredentialsManagement
      Scope:
        ComplianceResourceTypes:
          - "AWS::IAM::User"
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_GROUP_MEMBERSHIP_CHECK
